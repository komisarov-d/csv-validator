{"version":3,"sources":["components/Table/TableItem/TableItem.jsx","components/Table/Table.jsx","components/UploadForm/UploadForm.jsx","Validators/states.js","Validators/csvValidator.js","Hooks/useParser.js","components/ErrorMessage/ErrorMessage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TableItem","item","checkError","value","errors","length","includes","id","fullname","className","phone","email","age","experience","yearlyincome","toFixed","haschildren","licensestates","join","expirationdate","licensenumber","dublicates","Table","csvArr","tableItem","map","idx","UploadForm","setData","fileInput","React","createRef","type","name","ref","onChange","e","preventDefault","current","files","accept","htmlFor","states","updateObject","object","parseInt","parseFloat","validatePhone","validateState","removeSpace","el","isKey","newEl","split","shift","pop","replace","toLowerCase","state","unspaceItem","Object","entries","key","validPhone","unshift","findDublicates","obj","emails","phones","dublicate","forEach","push","p","errorCheck","test","keys","arrItem","toUpperCase","find","m","moment","isValid","now","isBefore","useParser","useState","setCvs","error","setError","useCallback","file","Papa","parse","dowload","header","complete","result","validArr","arr","fromEntries","newKey","newValue","indexValue","assign","validation","data","ErrorMessage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a77d45.chunk.js","sourcesContent":["import React from 'react'\r\nimport './tableItem.css'\r\nexport const TableItem = ({ item }) => {\r\n\r\n   const checkError = (value) => {\r\n      if (item.errors.length) {\r\n         const error = item.errors.includes(value)\r\n         if (error) { return 'invalid' }\r\n      }\r\n   }\r\n\r\n   return (\r\n      <tr>\r\n         <td>{item.id}</td>\r\n         <td >{item.fullname}</td>\r\n         <td className={`item ${checkError('phone')}`}>{item.phone}</td>\r\n         <td className={`item ${checkError('email')}`}>{item.email}</td>\r\n         <td className={`item ${checkError('age')}`}>{item.age}</td>\r\n         <td className={`item ${checkError('experience')}`}>{item.experience}</td>\r\n         <td className={`item ${checkError('yearlyincome')}`}>{item.yearlyincome.toFixed(2)}</td>\r\n         <td className={`item ${checkError('haschildren')}`}>{item.haschildren}</td>\r\n         <td className={`item ${checkError('licensestates')}`}>{item.licensestates.join(' | ')}</td>\r\n         <td className={`item ${checkError('expirationdate')}`}>{item.expirationdate}</td>\r\n         <td className={`item ${checkError('licensenumber')}`}>{item.licensenumber}</td>\r\n         <td className={`item ${checkError('dublicate')}`}>{item.dublicates[0]}</td>\r\n      </tr>\r\n   )\r\n}","import React from 'react'\r\nimport { TableItem } from './TableItem/TableItem'\r\nimport './table.css'\r\nexport const Table = ({ csvArr }) => {\r\n\r\n   const tableItem = csvArr.map((item, idx) => {\r\n      return <TableItem\r\n         key={idx}\r\n         item={item} />\r\n   })\r\n\r\n   if (!csvArr.length) { return <p className='empty'></p> }\r\n\r\n   return (\r\n      <table className='table'>\r\n         <thead className='table__head'>\r\n            <tr>\r\n               <th>ID</th>\r\n               <th>Full Name</th>\r\n               <th>Phone</th>\r\n               <th>Email</th>\r\n               <th>Age</th>\r\n               <th>Experience</th>\r\n               <th>Yearly Income</th>\r\n               <th>Has children</th>\r\n               <th>License states</th>\r\n               <th>Expiration date</th>\r\n               <th>License number</th>\r\n               <th>Duplicate with</th>\r\n            </tr>\r\n         </thead>\r\n         <tbody className='table__body'>\r\n\r\n            {tableItem}\r\n\r\n         </tbody>\r\n      </table>\r\n   )\r\n}","import React from 'react'\r\nimport './UploadForm.css'\r\n\r\nexport const UploadForm = ({ setData, csvArr }) => {\r\n   const fileInput = React.createRef();\r\n\r\n   const handleUpload = (e) => {\r\n      e.preventDefault()\r\n      if (fileInput.current.files[0]) {\r\n         setData(fileInput.current.files[0])\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form className='form'>\r\n         <input type=\"file\" name=\"uploadfile\" id=\"img\" ref={fileInput} onChange={handleUpload} accept='.csv' />\r\n         <label className='label' htmlFor=\"img\">Import users</label>\r\n      </form>\r\n   )\r\n}","export const states = {\r\n   \"AL\": \"Alabama\",\r\n   \"AK\": \"Alaska\",\r\n   \"AS\": \"American Samoa\",\r\n   \"AZ\": \"Arizona\",\r\n   \"AR\": \"Arkansas\",\r\n   \"CA\": \"California\",\r\n   \"CO\": \"Colorado\",\r\n   \"CT\": \"Connecticut\",\r\n   \"DE\": \"Delaware\",\r\n   \"DC\": \"District Of Columbia\",\r\n   \"FM\": \"Federated States Of Micronesia\",\r\n   \"FL\": \"Florida\",\r\n   \"GA\": \"Georgia\",\r\n   \"GU\": \"Guam\",\r\n   \"HI\": \"Hawaii\",\r\n   \"ID\": \"Idaho\",\r\n   \"IL\": \"Illinois\",\r\n   \"IN\": \"Indiana\",\r\n   \"IA\": \"Iowa\",\r\n   \"KS\": \"Kansas\",\r\n   \"KY\": \"Kentucky\",\r\n   \"LA\": \"Louisiana\",\r\n   \"ME\": \"Maine\",\r\n   \"MH\": \"Marshall Islands\",\r\n   \"MD\": \"Maryland\",\r\n   \"MA\": \"Massachusetts\",\r\n   \"MI\": \"Michigan\",\r\n   \"MN\": \"Minnesota\",\r\n   \"MS\": \"Mississippi\",\r\n   \"MO\": \"Missouri\",\r\n   \"MT\": \"Montana\",\r\n   \"NE\": \"Nebraska\",\r\n   \"NV\": \"Nevada\",\r\n   \"NH\": \"New Hampshire\",\r\n   \"NJ\": \"New Jersey\",\r\n   \"NM\": \"New Mexico\",\r\n   \"NY\": \"New York\",\r\n   \"NC\": \"North Carolina\",\r\n   \"ND\": \"North Dakota\",\r\n   \"MP\": \"Northern Mariana Islands\",\r\n   \"OH\": \"Ohio\",\r\n   \"OK\": \"Oklahoma\",\r\n   \"OR\": \"Oregon\",\r\n   \"PW\": \"Palau\",\r\n   \"PA\": \"Pennsylvania\",\r\n   \"PR\": \"Puerto Rico\",\r\n   \"RI\": \"Rhode Island\",\r\n   \"SC\": \"South Carolina\",\r\n   \"SD\": \"South Dakota\",\r\n   \"TN\": \"Tennessee\",\r\n   \"TX\": \"Texas\",\r\n   \"UT\": \"Utah\",\r\n   \"VT\": \"Vermont\",\r\n   \"VI\": \"Virgin Islands\",\r\n   \"VA\": \"Virginia\",\r\n   \"WA\": \"Washington\",\r\n   \"WV\": \"West Virginia\",\r\n   \"WI\": \"Wisconsin\",\r\n   \"WY\": \"Wyoming\"\r\n}","import { states } from './states.js'\r\nimport moment from 'moment'\r\n\r\nexport const validation = (arr) => {\r\n   let emails = []\r\n   let phones = []\r\n\r\n   let employArr = arr.map((item, idx) => {\r\n      let object = Object.fromEntries(\r\n         Object.entries(item).map(([key, value]) => {\r\n            let newKey = removeSpace(key, true)\r\n            let newValue = removeSpace(value)\r\n            if (newKey === 'email') { emails.push(newValue.toLowerCase()) }\r\n            if (newKey === 'phone') { phones.push(newValue) }\r\n            return [`${newKey}`, newValue]\r\n         })\r\n      )\r\n      if (!object.email || !object.phone || !object.fullname) { return false }\r\n\r\n      object = updateObject(object)\r\n\r\n      const indexValue = { id: idx + 1 }\r\n      const errors = { errors: errorCheck(object) }\r\n\r\n      object = Object.assign({ ...object }, indexValue, errors);\r\n      return object\r\n   })\r\n   const resultArr = employArr.map(object => {\r\n\r\n      if (!object) { return false }\r\n\r\n      const dublicates = { dublicates: findDublicates(object, emails, phones) }\r\n\r\n      object = Object.assign({ ...object }, dublicates)\r\n      return object\r\n   })\r\n   return resultArr\r\n}\r\nconst updateObject = (object) => {\r\n   object.age = parseInt(object.age)\r\n   object.yearlyincome = parseFloat(object.yearlyincome)\r\n   object.phone = validatePhone(object.phone)\r\n   object.licensestates = validateState(object.licensestates)\r\n   if (object.haschildren === '') { object.haschildren = 'FALSE' }\r\n   return object\r\n}\r\n\r\nconst removeSpace = (el, isKey = false) => {\r\n   let newEl = el.split('')\r\n\r\n   if (newEl[0] === ' ') { newEl.shift() }\r\n   if (newEl[newEl.length - 1] === ' ') { newEl.pop() }\r\n\r\n   newEl = newEl.join('')\r\n   if (isKey) { newEl = newEl.replace(/\\s/g, '').toLowerCase() }\r\n   return newEl\r\n}\r\n\r\nconst validateState = (state) => {\r\n   let st = state.split('|')\r\n\r\n   const finalStateArr = st.map(item => {\r\n      let unspaceItem = removeSpace(item)\r\n\r\n      for (const [key, value] of Object.entries(states)) {\r\n         if (unspaceItem === value) {\r\n            item = key\r\n         } else if (unspaceItem === key) {\r\n            item = key\r\n         }\r\n      }\r\n      return item\r\n   })\r\n   return finalStateArr\r\n}\r\nconst validateEmail = (email) => {\r\n   var re = /\\S+@\\S+\\.\\S+/;\r\n   return re.test(email);\r\n}\r\n\r\nconst validatePhone = (phone) => {\r\n   const validPhone = phone.split('')\r\n\r\n   if (validPhone.length === 11 && validPhone[0] !== '+' && validPhone[0] === '1') {\r\n      validPhone.unshift('+')\r\n   }\r\n   if (validPhone.length === 10 && validPhone[0] !== '+') {\r\n      validPhone.unshift('1')\r\n      validPhone.unshift('+')\r\n   }\r\n   const resultPhone = validPhone.join('')\r\n   return resultPhone\r\n}\r\n\r\nconst findDublicates = (obj, emails, phones) => {\r\n   const dublicate = []\r\n   emails.forEach((e, idx) => {\r\n      if (e === obj.email.toLowerCase() && obj.id !== idx + 1) {\r\n         dublicate.push(idx + 1)\r\n      }\r\n   })\r\n   phones.forEach((p, idx) => {\r\n      if (p === obj.phone && obj.id !== idx + 1) {\r\n         dublicate.push(idx + 1)\r\n      }\r\n   })\r\n   return dublicate\r\n}\r\n\r\nconst errorCheck = (obj) => {\r\n   const errors = []\r\n\r\n   if (!validateEmail(obj.email)) { errors.push('email') }\r\n\r\n   if (obj.age < 21) { errors.push('age') }\r\n\r\n   if (obj.experience < 0 || obj.experience > obj.age) { errors.push('experience') }\r\n\r\n   const reg = /[^a-zA-Z0-9]/\r\n   const validLicenseNum = reg.test(obj.licensenumber);\r\n   if (validLicenseNum || obj.licensenumber.length !== 6) { errors.push('licensenumber') }\r\n\r\n   if (obj.haschildren !== 'TRUE' && obj.haschildren !== 'FALSE' && obj.haschildren !== '') { errors.push('haschildren') }\r\n\r\n   if (obj.phone.length !== 12 || obj.phone[0] !== '+' || obj.phone[1] !== '1') { errors.push('phone') }\r\n\r\n\r\n   if (obj.yearlyincome < 0 || obj.yearlyincome > 1000000) {\r\n      errors.push('yearlyincome')\r\n   }\r\n\r\n\r\n   obj.licensestates.forEach(item => {\r\n\r\n      const statesVal = Object.keys(states)\r\n      const match = statesVal.map(arrItem => {\r\n         if (arrItem === item.toUpperCase()) { return true }\r\n         return false\r\n      })\r\n\r\n      const e = match.find(m => m === true)\r\n\r\n      if (!e || item.length !== 2) { errors.push('licensestates') }\r\n   })\r\n\r\n   if (!moment(obj.expirationdate, 'MM/DD/YYYY', true).isValid() && !moment(obj.expirationdate, 'YYYY-MM-DD', true).isValid()) {\r\n      errors.push('expirationdate')\r\n   }\r\n   const now = moment()\r\n   if (moment(obj.expirationdate).isBefore(now)) { errors.push('expirationdate') }\r\n\r\n   return errors\r\n}","import { useCallback, useState } from \"react\"\r\nimport Papa from 'papaparse'\r\nimport { validation } from \"../Validators/csvValidator\"\r\n\r\nexport const useParser = () => {\r\n   const [csvArr, setCvs] = useState([])\r\n   const [error, setError] = useState(false)\r\n\r\n   const setData = useCallback((file) => {\r\n      setCvs([])\r\n      Papa.parse(file, {\r\n         dowload: true,\r\n         header: true,\r\n         complete: (result) => {\r\n\r\n            const validArr = validation(result.data)\r\n\r\n            setError(false)\r\n            validArr.forEach(el => {\r\n               if (el === false) {\r\n                  setError(true)\r\n               }\r\n            })\r\n            setCvs(validArr)\r\n         }\r\n      })\r\n   }, [])\r\n\r\n   return { csvArr, setData, error }\r\n}","import React from 'react'\r\nimport './errorMessage.css'\r\nexport const ErrorMessage = () => {\r\n\r\n   return (\r\n      <div className='error'>\r\n         <p className='error__message'>\r\n            File format is not correct\r\n         </p>\r\n      </div>\r\n   )\r\n}","import React from 'react'\nimport './App.css'\nimport { Table } from './components/Table/Table'\nimport { UploadForm } from './components/UploadForm/UploadForm.jsx'\nimport { useParser } from './Hooks/useParser';\nimport { ErrorMessage } from './components/ErrorMessage/ErrorMessage'\n\nconst App = () => {\n\n  const { csvArr, setData, error } = useParser()\n\n  return (\n    <div className='container'>\n      <UploadForm setData={setData} csvArr={csvArr} />\n      {error && <ErrorMessage />}\n      { !error && <Table csvArr={csvArr} />}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}